<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Hexo on Vince</title><link>https://i.vince.pub/tags/hexo/</link><description>Recent content in Hexo on Vince</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 14 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://i.vince.pub/tags/hexo/index.xml" rel="self" type="application/rss+xml"/><item><title>前端在线编辑博客，使用 Codespaces 搭建 Hexo 博客</title><link>https://i.vince.pub/p/hexo-codespaces/</link><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid>https://i.vince.pub/p/hexo-codespaces/</guid><description>前言 多数情况下，我们会选择将 Hexo 安装在本地，其中最大的痛点就是不能多设备同步和环境固定。之后，在 GitHub Actions 推出以后，我们可以将 Hexo 的 Source 文件保存，通过 CI 来部署我们的博客，这样的好处就是跨设备同步非常方便，但是预览上会遇到一些问题。现在，GitHub 的 Codespaces 推出后，Hexo 的纯前端编辑部署完全可以实现了。本篇介绍如何使用 Codespaces 搭建 Hexo 博客及几种部署方法。Codespces 还支持自动设置依赖关系、SSH 密钥。
安装 仓库及环境
创建一个新的仓库，由于我将静态资源也存放到这个仓库（之后会提及)，所以推荐使用公开库，如果需要使用私有库，需要将静态资源分离，放在一个公开库，创建之后打开 Codespaces。
接下来即可安装 Hexo，Codespaces 内置了 Node.js 和 Git，无需再安装相关应用程序。安装 Heox 文档，的相关内容，我们很快就可以完成安装。
npm install -g hexo-cli # 全局安装 Hexo。 hexo init blog # &amp;lt;folder&amp;gt; 这里以 blog 为例。 cd blog npm install 以上我们已经完成了 Hexo 的安装和建站，Hexo 的 Source 文件位于 /workspaces/hexo-codespaces-demo/blog 下。依据个人需求对配置项进行调整后便可以开始预览了。</description></item><item><title>常见静态网站托管平台使用及多节点部署方案</title><link>https://i.vince.pub/p/hexo-static/</link><pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate><guid>https://i.vince.pub/p/hexo-static/</guid><description>前言 对于 Hexo 来说，我们使用它来部署博客是因为无后端运维和高速渲染页面等优点。选择一个合适的托管平台对于博客来说十分重要，可以免费使用且稳定高速的平台是不存在的，我们总是需要做出妥协。我使用了 Github Pages、Coding Pages、Gitee Pages、Netlify 和 Vercel 来部署博客，以下为我的使用报告。
常见托管平台 节点
Github Pages 使用体验：可以与仓库无缝对接，高效部署，但是没用设置国内节点，在国内访问速度较慢，作为一个海外节点还是非常不错的。相对而言，使用 jsdelivr 来加速网站相关文件可以满足基本使用。查看 Github Status，Pages 服务会出现偶尔挂掉的情况，但多数仓库文档、演示等都选择了 Github Pages 服务。
使用及扩展：提供二级域名，支持域名绑定及免费 SSL 证书。网站内容与仓库保存一致，自动推送。通过使用 Github Actions 具有较强扩展性。
Netlify 使用体验：Netlify 的节点设置在海外，但 Netlify 的服务速度尚可，国内部分地区可以到达高速服务。在使用 CDN 的情况下，把网站部署在 Netlify 是可以比较好的选择。Vuejs 和 Hexo 的官网都部署在 Netlify 上，其稳定性可想而知。Netlify 虽然拥有付费功能，但是基本上我们需要使用到的服务都免费。
使用及扩展：提供二级域名，支持域名绑定及免费 SSL 证书。Netlify 支持 Github 或者 Gitlab 等账号登录，如果仓库已经是静态网站文件，每次 Push 到仓库 Netlify 都会自动部署。支持 Build Command，源文件也可以通过提供的环境自动编译或渲染，类似于一款 CI，与 Github Pages 功能相近。
Vercel 使用体验：Vercel 的体验情况总体和 Netlify 相近，节点设置在海外，访问速度尚可。前身是 now.</description></item><item><title>Hexo-Action-TencentCloudBase</title><link>https://i.vince.pub/p/hexo-action-tencentcloudbase/</link><pubDate>Mon, 11 May 2020 00:00:00 +0000</pubDate><guid>https://i.vince.pub/p/hexo-action-tencentcloudbase/</guid><description>Hexo-Action-TencentCloudBase 通过 Github Actions，使用 Hexo-Action-TencentCloudBase 可以将 Hexo 的源文件部署并推送到 Tencent CloudBase 的静态托管中。
🚀 使用 由于 Github Pages 在国内的访问速度，可以使用 Tencent CloudBase 来托管相关静态网页。Hexo-Action-TencentCloudBase 可以通过 Github Actions 将 Hexo 的源文件推送到Tencent CloudBase 的静态托管中。显目地址：Hexo-Action-TencentCloudBase
在仓库中添加 Repo/.github/workflows/tencent.yml ，相关文件即可。更多关于 Github Actions ，请点击这里查看。
🔐 腾讯云相关输入内容 在项目的 secret 添加 ENV_ID SECRET_ID SECRET_KEY 相关字段。
SECRET_ID # Required 云开发的访问密钥 secretId
SECRET_KEY # Required 云开发的访问密钥 secretKey
ENV_ID # Required 云开发的环境 id envId
✔ 使用内容及灵感来源 实例
cloudbase-action
action-hexo</description></item></channel></rss>