<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hugo on Vince</title><link>https://i.vince.pub/tags/hugo/</link><description>Recent content in hugo on Vince</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://i.vince.pub/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>Webify 使用体验及 hugo 部署实例</title><link>https://i.vince.pub/p/webify/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://i.vince.pub/p/webify/</guid><description>前言 与云开发的渊源 其实我算是云开发比较早的用户，最早开始使用云开发是在去年，参加了云开发的静态网站托管赞助计划。这一切都要从个人博客的部署说起，我相信 GitHub Page 是很多人对静态托管的启蒙，有一个先吃饱再吃好的循序渐进的步骤，访问速度在后期也成为选择部署的主要考虑因素，通过赞助计划开始接触到云开发的各项服务。
最早是通过 cloudbase-action 这个插件将博客推送到云开发的静态托管，但是由于 GitHub Actions 的 Runner 的局限性，部署过程中网络环境有很大的局限性。这也是第一个版本，第二个版本借助了 CloudBase Framework 的赋能。在这里我也有感觉，webify 的灵感也有一些来自这里。
Webify Serverless 模式最近一直很火热，我个人对云开发的理解就是做中国的 Vercel，在 Vercel 和 Cloudflare Pages 面前，还是很开心国内也有做一款类似的产品。在我看来，Webify 提供的是一个一站式的解决方法，现在这种方式下，每次 Push 后剩下的一套流程都不需要我动手了（例如静态页面生成、部署和 CDN 配置等），这应该是个人博客及网站比较理想的一个方法。
体验
Webify 目前支持了主流的托管平台和绝大多数的网站框架模板，使用过程就不再累赘，OAuth 授权之后，导入仓库即可，对已支持的模板还可以进行自动识别，整个操作来说算是十分顺畅。
部署完成后会发现在静态托管中会多一个环境，这就是 Webify 部署过来静态资源。其实我简单的理解把它当作 静态托管 + CloudBase Framework 的结合。这样也解决了之前说到的一个痛点，GitHub Actions 的 Runner 因为网络环境带来的问题。之前需要使用 GitHub Actions 这样的 CI/CD 能力来构建部署网站，Webify 就是赋予了这样一种能力。
Hugo 的部署
目前的 Webify 还没有支持 hugo 的摸板，交流群里@王伟嘉也给出了将 hugo 的可执行二进制文件（linux64）放到项目里，在构建的时候调用运行这样的方法。Webify 支持自定义构建配置，这样的方法确实非常好。但我用了另一种思路，借助 GitHub Actions 的能力，构建生成到另一个仓库或主分支，再由 Webify 的空模板配置去部署。这样的方法相对而言有些“听君一席话，如听一席话的感觉”，但我觉得这也是一个比较简单的解决方案。</description></item><item><title>从 Fluid 到 Stack</title><link>https://i.vince.pub/p/hugo-blog/</link><pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate><guid>https://i.vince.pub/p/hugo-blog/</guid><description>此前的博客 我换主题的几点原因：
审美疲劳（人总是会变的） 风格改变 在 V2EX 遇到了 Stack ∞ 总的来说主要原因还是想多尝试一下，在使用 Fluid 的过程中我学习到了很多东西，对于 Git 的使用就是在此过程中熟悉起来的。我不会放弃关注和使用 Fluid，依旧使用 Fluid 作为我的备用博客。
停更的几个月 在六月底开始，我就很少更新博客了。主要是因为我去做暑假工了，体验了一下实习生的工作，导致没有什么时间关注的博客这一块上面。开学以后，我又遇到了一些十分糟糕的事情，导致我对生活失去了信心。经过反复思考，我认为博客应该作为我生活一个部分，博客应该成为日常。最大的作用就是能够督促我进行学习，five 养成计划。对自我的认知上，我急需提升自己。
使用 Hugo 的过程遇到的问题 HTML 渲染 由于一些原因，在写博客的时候有习惯插入一些 HTML 片段，单纯 Markdown 语法渲染出的内容有些不够用。在 Markdown 文件中插入 HTML 片段后 HTML 片段无法加载，于是查看了源代码，HTML 片段前出现 &amp;lt;!--raw Html omitted--&amp;gt;，随即查找了官方文档发现了问题所在，Hugo 在最近的版本中使用了 Glodmark 作为默认库，出于安全考虑，默认状态下不加载 HTML 片段。于是就有了两个方法，一是开启不安全设置，二是换回 Blackfriday 库，我认为前者为最佳方案。
在配置文件 config.toml 中添加以下配置即可，以上问题算是解决了。
[markup] [markup.goldmark] [markup.goldmark.renderer] unsafe = true 使用 FTP-Deploy-Action 推送文件时的问题 我将 Hugo 的 Source 文件存放在 Github 的一个仓库中，使用 Github Actions 进行渲染及推送到服务器上，但流程执行完毕后，服务器仍然没有相关文件，同时在运行的过程中没有进行报错。</description></item></channel></rss>